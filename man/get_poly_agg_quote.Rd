% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alpaca4R.R
\name{get_poly_agg_quote}
\alias{get_poly_agg_quote}
\title{Get Polygon Aggregate Pricing Data}
\usage{
get_poly_agg_quote(
  ticker = NULL,
  multiplier = 1,
  timespan = "day",
  from = NULL,
  to = NULL,
  unadjusted = FALSE
)
}
\arguments{
\item{ticker}{Specify which symbol you want to call by inserting ticker as a string.}

\item{multiplier}{Size of the timespan multiplier. Default to 1.}

\item{timespan}{Size of the time window i.e "minute", "hour", "day", "week", month", "quarter", or "year". Default to day.}

\item{from}{The starting date for the pricing data.}

\item{to}{The ending date for the pricing data.}

\item{unadjusted}{Set to true if the results should NOT be adjusted for splits.}
}
\value{
A list object containing all information the API responds with.
}
\description{
This function provides aggregate pricing data from Polygon. Polygon provides consolidated market data. Consolidated stock market data is an aggregated reporting of all securities exchanges’ and alternative trading venues’ quote and trade data. It is the most relied upon type of market data, providing investors and traders globally with a unified view of U.S. stock market prices and volumes. It also underpins the National Best Bid and Offer (NBBO), which provides investors with a continuous view of the best available displayed buy and sell prices, and through Rule 611 ensures that investors receive the best available displayed prices on their trades, with a few exceptions.
}
\examples{
Getting default pricing data on AMZN (daily): 
get_poly_agg_quote(ticker = "AMZN",from = "2019-04-01", to = "2019-04-12")
Getting minute pricing data on AMZN: 
get_poly_agg_quote("AMZN", from = "2019-04-11", to = "2019-04-12", timespan = "minute")
Getting quarterly pricing data on AMZN: 
get_poly_agg_quote("AMZN", from = "2018-01-01", to = "2019-04-12", timespan = "quarter")
Getting yearly pricing data on AMZN: 
get_poly_agg_quote("AMZN", from = "2015-01-01", to = "2019-12-31", timespan = "year")
}
